<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.uap.dao.DepartmentMapper">
    <resultMap id="BaseResultMap" type="com.dili.uap.sdk.domain.Department">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="firm_code" jdbcType="VARCHAR" property="firmCode"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="created_id" jdbcType="BIGINT" property="createdId"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="modified" jdbcType="TIMESTAMP" property="modified"/>
        <result column="modified_id" jdbcType="BIGINT" property="modifiedId"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, parent_id, firm_code, name, code, description, created_id, created, modified,
        modified_id
    </sql>

    <!-- 根据firmcode查询部门 -->
    <select id="listDepartments" parameterType="map" resultType="map">
        SELECT
        concat('firm_',#{firmCode}) AS id
        ,null AS parentId
        ,#{firmCode} AS firmCode
        ,(select name from firm where code=#{firmCode}) AS name
        ,null AS code
        ,null AS description
        ,null AS created_id
        ,null AS created
        ,null AS modified
        ,null AS modified_id
        union all

        SELECT
        concat('department_',id) AS id
        ,case when parent_id is null then concat('firm_',firm_code) else concat('department_',parent_id) end as parentId
        , firm_code AS firmCode, name, code, description, created_id, created, modified,
        modified_id
        FROM
        department d
        WHERE 1=1
        <if test="firmCode != null and firmCode != ''">
            and d.firm_code = #{firmCode}
        </if>
        <if test="sort !=null">
            ORDER BY `${sort}`
            <if test="order !=null">
                ${order}
            </if>
        </if>
    </select>
	<select id="findByUserId" parameterType="Long" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated -->
		select
		d.id, d.parent_id, d.firm_code, d.name, d.code, d.description, d.created_id, d.created, d.modified,
        d.modified_id
		from department d inner join `user` u on d.id =
		u.department_id
		where
		u.id = #{userId}
	</select>
	
	<select id="getChildDepartments" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		{call getChildDepartments(#{id})}
	</select>


    <!-- 根据市场查询部门列表 -->
    <select id="listUserDepartment" parameterType="java.lang.String" resultType="map">
		 (SELECT
	        ( SELECT concat( 'department_', d.`id` ) ) id
            ,CASE WHEN d.`parent_id` IS NULL THEN concat( 'firm_', d.`firm_code` )
            ELSE concat( 'department_', d.`parent_id` ) END parentId
            ,concat(d.`name`,'(',count( u.`id` ),')') name
            ,d.`firm_code` firmCode
        FROM
            `department` d
            LEFT JOIN `user` u ON d.`id` = u.`department_id`
        <if test="firmCode !=null and firmCode !=''">
        WHERE
            d.`firm_code` = #{firmCode}
        </if>
        GROUP BY
            d.id)
        UNION ALL
        (SELECT
            concat( 'firm_', f.`code` ) id
            ,f.`parent_id`
            ,concat(f.`name`,'(',count(u.`id` ),')') name
            ,u.`firm_code` firmCode
        FROM
            `firm` f LEFT JOIN `user` u ON f.`code` = u.`firm_code`
        <if test="firmCode !=null and firmCode !=''">
        WHERE
            code = #{firmCode}
        </if>
        GROUP BY f.code)
	</select>
</mapper>